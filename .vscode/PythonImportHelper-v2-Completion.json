[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "AuthenticationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "auth",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "PasswordInput",
        "importPath": "django.forms.widgets",
        "description": "django.forms.widgets",
        "isExtraImport": true,
        "detail": "django.forms.widgets",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "django.forms.widgets",
        "description": "django.forms.widgets",
        "isExtraImport": true,
        "detail": "django.forms.widgets",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "PasswordResetTokenGenerator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "six",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_current_site",
        "importPath": "django.contrib.sites.shortcuts",
        "description": "django.contrib.sites.shortcuts",
        "isExtraImport": true,
        "detail": "django.contrib.sites.shortcuts",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "force_str",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "ShippingForm",
        "importPath": "payment.forms",
        "description": "payment.forms",
        "isExtraImport": true,
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "ShippingForm",
        "importPath": "payment.forms",
        "description": "payment.forms",
        "isExtraImport": true,
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "importPath": "payment.models",
        "description": "payment.models",
        "isExtraImport": true,
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "importPath": "payment.models",
        "description": "payment.models",
        "isExtraImport": true,
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "AccountConfig",
        "kind": 6,
        "importPath": "ecommerce.account.apps",
        "description": "ecommerce.account.apps",
        "peekOfCode": "class AccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'account'",
        "detail": "ecommerce.account.apps",
        "documentation": {}
    },
    {
        "label": "CreateUserForm",
        "kind": 6,
        "importPath": "ecommerce.account.forms",
        "description": "ecommerce.account.forms",
        "peekOfCode": "class CreateUserForm(UserCreationForm):\n  def __init__(self, *args, **kwargs):\n    super(CreateUserForm, self).__init__(*args, **kwargs)\n    self.fields['email'].required = True\n    self.fields['password1'].required = True\n    self.fields['password2'].required = True\n  class Meta:\n    model = User\n    fields = ['username', 'email', 'password1', 'password2']\n    def clean_email(self):",
        "detail": "ecommerce.account.forms",
        "documentation": {}
    },
    {
        "label": "SignInForm",
        "kind": 6,
        "importPath": "ecommerce.account.forms",
        "description": "ecommerce.account.forms",
        "peekOfCode": "class SignInForm(AuthenticationForm):\n  username = forms.CharField(widget=TextInput())\n  password = forms.CharField(widget=PasswordInput())\nclass UpdateUserForm(forms.ModelForm):\n  password = None\n  class Meta:\n    model = User\n    fields = ['username', 'email']\n    exclude = ['password1', 'password1']\n  def __init__(self, *args, **kwargs):",
        "detail": "ecommerce.account.forms",
        "documentation": {}
    },
    {
        "label": "UpdateUserForm",
        "kind": 6,
        "importPath": "ecommerce.account.forms",
        "description": "ecommerce.account.forms",
        "peekOfCode": "class UpdateUserForm(forms.ModelForm):\n  password = None\n  class Meta:\n    model = User\n    fields = ['username', 'email']\n    exclude = ['password1', 'password1']\n  def __init__(self, *args, **kwargs):\n    super(UpdateUserForm, self).__init__(*args, **kwargs)\n    self.fields['email'].required = True\n  def clean_email(self):",
        "detail": "ecommerce.account.forms",
        "documentation": {}
    },
    {
        "label": "UserVerificationTokenGenerator",
        "kind": 6,
        "importPath": "ecommerce.account.token",
        "description": "ecommerce.account.token",
        "peekOfCode": "class UserVerificationTokenGenerator(PasswordResetTokenGenerator):\n    def _make_hash_value(self, user, timestamp):\n        user_id = six.text_type(user.pk)\n        ts = six.text_type(timestamp)\n        is_active = six.text_type(user.is_active)\n        return f\"{user_id}{ts}{is_active}\"\nuser_tokenizer_generate = UserVerificationTokenGenerator()",
        "detail": "ecommerce.account.token",
        "documentation": {}
    },
    {
        "label": "user_tokenizer_generate",
        "kind": 5,
        "importPath": "ecommerce.account.token",
        "description": "ecommerce.account.token",
        "peekOfCode": "user_tokenizer_generate = UserVerificationTokenGenerator()",
        "detail": "ecommerce.account.token",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecommerce.account.urls",
        "description": "ecommerce.account.urls",
        "peekOfCode": "urlpatterns = [\n  path('sign-up', views.sign_up, name='sign-up'),\n  path('sign-in', views.sign_in, name='sign-in'),\n  path('sign-out', views.sign_out, name='sign-out'),\n  # Dashboard / profile \n  path('dashboard', views.dashboard, name='dashboard'),\n  path('profile-management', views.profile_management, name='profile-management'),\n  path('delete-account', views.delete_account, name='delete-account'),\n  # Email verification Url's \n  path('email-verification/<str:uidb64>/<str:token>/', views.email_verification, name='email-verification'),",
        "detail": "ecommerce.account.urls",
        "documentation": {}
    },
    {
        "label": "sign_up",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def sign_up(request):\n  form = CreateUserForm()\n  if request.method == 'POST':\n    form = CreateUserForm(request.POST)\n    if form.is_valid():\n      user = form.save()\n      user.is_active = False\n      user.save()\n      # Email verification setup ( template )\n      current_site = get_current_site(request)",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "email_verification",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def email_verification(request, uidb64, token):\n  user_id = force_str(urlsafe_base64_decode(uidb64))\n  user = User.objects.get(pk=user_id)\n  if user and user_tokenizer_generate.check_token(user, token):\n    user.is_active = True   \n    user.save()\n    return redirect('email-verification-success')\n  else:\n    return redirect('email-verification-failed')\ndef email_verification_sent(request):",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "email_verification_sent",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def email_verification_sent(request):\n  return render(request, 'account/registration/email-verification-sent.html')\ndef email_verification_success(request):\n  return render(request, 'account/registration/email-verification-success.html')\ndef email_verification_failed(request):\n  return render(request, 'account/registration/email-verification-failed.html')\ndef sign_in(request):\n  form = SignInForm()\n  if request.method == 'POST':",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "email_verification_success",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def email_verification_success(request):\n  return render(request, 'account/registration/email-verification-success.html')\ndef email_verification_failed(request):\n  return render(request, 'account/registration/email-verification-failed.html')\ndef sign_in(request):\n  form = SignInForm()\n  if request.method == 'POST':\n    form = SignInForm(request, data=request.POST)\n    if form.is_valid():",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "email_verification_failed",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def email_verification_failed(request):\n  return render(request, 'account/registration/email-verification-failed.html')\ndef sign_in(request):\n  form = SignInForm()\n  if request.method == 'POST':\n    form = SignInForm(request, data=request.POST)\n    if form.is_valid():\n      username = request.POST.get('username')\n      password = request.POST.get('password')\n      user = authenticate(request, username=username, password=password)",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "sign_in",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def sign_in(request):\n  form = SignInForm()\n  if request.method == 'POST':\n    form = SignInForm(request, data=request.POST)\n    if form.is_valid():\n      username = request.POST.get('username')\n      password = request.POST.get('password')\n      user = authenticate(request, username=username, password=password)\n      if user is not None:\n        auth.login( request, user )",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "sign_out",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def sign_out(request):\n  try:\n    for key in list(request.session.keys()):\n      if key == 'session_key':\n        continue\n      else:\n        del request.session[key]\n  except KeyError:\n    pass\n  # auth.logout(request)",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "dashboard",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def dashboard(request):\n  return render(request, 'account/dashboard.html')\n@login_required(login_url='sign-in')\ndef profile_management(request):\n  #Update email and username  \n  user_form = UpdateUserForm(instance=request.user)\n  if request.method == 'POST':\n    user_form = UpdateUserForm(request.POST, instance=request.user)\n    if user_form.is_valid():\n      user_form.save()",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "profile_management",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def profile_management(request):\n  #Update email and username  \n  user_form = UpdateUserForm(instance=request.user)\n  if request.method == 'POST':\n    user_form = UpdateUserForm(request.POST, instance=request.user)\n    if user_form.is_valid():\n      user_form.save()\n      messages.info(request, 'Account updated')\n      return redirect('dashboard')\n  context = {'user_form': user_form}",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "delete_account",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def delete_account(request):\n  user = User.objects.get(id=request.user.id)\n  if request.method == 'POST':\n    user.delete()\n    messages.error(request, 'Account deleted')\n    return redirect('store')\n  return render(request, 'account/delete-account.html')\n#Shipping view\ndef manage_shipping(request):\n  try:",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "manage_shipping",
        "kind": 2,
        "importPath": "ecommerce.account.views",
        "description": "ecommerce.account.views",
        "peekOfCode": "def manage_shipping(request):\n  try:\n    # account user with shipment information\n    shipping = ShippingAddress.objects.get(user=request.user.id)\n  except ShippingAddress.DoesNotExist:\n    shipping = None\n  form = ShippingForm(instance=shipping)\n  if request.method == 'POST':\n    form = ShippingForm(request.POST, instance=shipping)\n    if form.is_valid():",
        "detail": "ecommerce.account.views",
        "documentation": {}
    },
    {
        "label": "CartConfig",
        "kind": 6,
        "importPath": "ecommerce.cart.apps",
        "description": "ecommerce.cart.apps",
        "peekOfCode": "class CartConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cart'",
        "detail": "ecommerce.cart.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "ecommerce.cart.cart",
        "description": "ecommerce.cart.cart",
        "peekOfCode": "class Cart():\n  def __init__(self, request):\n    self.session = request.session\n    # Returning user - obtain his/her existing session\n    cart = self.session.get('session_key')\n    # New user - generate a new session\n    if 'session_key' not in request.session:\n      cart = self.session['session_key'] = {}\n    self.cart = cart\n  def add(self, product, product_qty):",
        "detail": "ecommerce.cart.cart",
        "documentation": {}
    },
    {
        "label": "cart",
        "kind": 2,
        "importPath": "ecommerce.cart.context_processors",
        "description": "ecommerce.cart.context_processors",
        "peekOfCode": "def cart(request):\n  return {'cart': Cart(request) }",
        "detail": "ecommerce.cart.context_processors",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecommerce.cart.urls",
        "description": "ecommerce.cart.urls",
        "peekOfCode": "urlpatterns = [\n  path('', views.cart_summary, name='cart-summary'),\n  path('add/', views.cart_add, name='cart-add'),\n  path('delete/', views.cart_delete, name='cart-delete'),\n  path('update/', views.cart_update, name='cart-update'),\n]",
        "detail": "ecommerce.cart.urls",
        "documentation": {}
    },
    {
        "label": "cart_summary",
        "kind": 2,
        "importPath": "ecommerce.cart.views",
        "description": "ecommerce.cart.views",
        "peekOfCode": "def cart_summary(request):\n  cart = Cart(request)\n  return render(request, 'cart/cart-summary.html', {'cart': cart})\ndef cart_add(request):\n  cart = Cart(request)\n  if request.POST.get('action') == 'post':\n    product_id = int(request.POST.get('product_id'))\n    product_quantity = int(request.POST.get('product_quantity'))\n    product = get_object_or_404(Product, id = product_id)\n    cart.add(product = product, product_qty = product_quantity)",
        "detail": "ecommerce.cart.views",
        "documentation": {}
    },
    {
        "label": "cart_add",
        "kind": 2,
        "importPath": "ecommerce.cart.views",
        "description": "ecommerce.cart.views",
        "peekOfCode": "def cart_add(request):\n  cart = Cart(request)\n  if request.POST.get('action') == 'post':\n    product_id = int(request.POST.get('product_id'))\n    product_quantity = int(request.POST.get('product_quantity'))\n    product = get_object_or_404(Product, id = product_id)\n    cart.add(product = product, product_qty = product_quantity)\n    cart_quantity = cart.__len__()\n    response = JsonResponse({'quantity': cart_quantity})\n    return response",
        "detail": "ecommerce.cart.views",
        "documentation": {}
    },
    {
        "label": "cart_delete",
        "kind": 2,
        "importPath": "ecommerce.cart.views",
        "description": "ecommerce.cart.views",
        "peekOfCode": "def cart_delete(request):\n  cart = Cart(request)\n  if request.POST.get('action') == 'post':\n    product_id = int(request.POST.get('product_id'))\n    cart.delete(product = product_id)\n    cart_quantity = cart.__len__()\n    cart_total = cart.total()\n    response = JsonResponse({'quantity': cart_quantity, 'total': cart_total})\n    return response\ndef cart_update(request):",
        "detail": "ecommerce.cart.views",
        "documentation": {}
    },
    {
        "label": "cart_update",
        "kind": 2,
        "importPath": "ecommerce.cart.views",
        "description": "ecommerce.cart.views",
        "peekOfCode": "def cart_update(request):\n  cart = Cart(request)\n  if request.POST.get('action') == 'post':\n    product_id = int(request.POST.get('product_id'))\n    product_quantity = int(request.POST.get('product_quantity'))\n    cart.update(product = product_id, product_qty = product_quantity)\n    cart_quantity = cart.__len__()\n    cart_total = cart.total()\n    response = JsonResponse({'quantity': cart_quantity, 'total': cart_total})\n    return response",
        "detail": "ecommerce.cart.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.asgi",
        "description": "ecommerce.ecommerce.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "ecommerce.ecommerce.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-tk122d0m!6or(jke_i2p+!a6125sn8du_z)9&l%w1=x7dp7$z#'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-tk122d0m!6or(jke_i2p+!a6125sn8du_z)9&l%w1=x7dp7$z#'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'store',",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'store',\n    'cart',\n    'account',",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = 'bootstrap4'\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'ecommerce.urls'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "ROOT_URLCONF = 'ecommerce.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "WSGI_APPLICATION = 'ecommerce.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'static/media'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'static/media'\n# Default primary key field type",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'static/media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'static/media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'static/media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL=PORT = '587'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "STATICFILES_DIRS = [BASE_DIR / 'static']\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'static/media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL=PORT = '587'\nEMAIL_USE_TLS = 'True'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'static/media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL=PORT = '587'\nEMAIL_USE_TLS = 'True'\nEMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'static/media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL=PORT = '587'\nEMAIL_USE_TLS = 'True'\nEMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'\nEMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL=PORT = '587'\nEMAIL_USE_TLS = 'True'\nEMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'\nEMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL=PORT = '587'\nEMAIL_USE_TLS = 'True'\nEMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'\nEMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL=PORT = '587'\nEMAIL_USE_TLS = 'True'\nEMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'\nEMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL=PORT",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "EMAIL=PORT = '587'\nEMAIL_USE_TLS = 'True'\nEMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'\nEMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "EMAIL_USE_TLS = 'True'\nEMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'\nEMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "EMAIL_HOST_USER = 'aguerrerodev.web@gmail.com'\nEMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.settings",
        "description": "ecommerce.ecommerce.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = 'snvr tuie onlb ybpz'",
        "detail": "ecommerce.ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.urls",
        "description": "ecommerce.ecommerce.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('store.urls')),\n    path('cart/', include('cart.urls')),\n    path('account/', include('account.urls')),\n    path('payment/', include('payment.urls')),\n]\nurlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)",
        "detail": "ecommerce.ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecommerce.ecommerce.wsgi",
        "description": "ecommerce.ecommerce.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "ecommerce.ecommerce.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ecommerce.payment.migrations.0001_initial",
        "description": "ecommerce.payment.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ShippingAddress',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "ecommerce.payment.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ecommerce.payment.migrations.0002_alter_shippingaddress_user",
        "description": "ecommerce.payment.migrations.0002_alter_shippingaddress_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('payment', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='shippingaddress',\n            name='user',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "ecommerce.payment.migrations.0002_alter_shippingaddress_user",
        "documentation": {}
    },
    {
        "label": "PaymentConfig",
        "kind": 6,
        "importPath": "ecommerce.payment.apps",
        "description": "ecommerce.payment.apps",
        "peekOfCode": "class PaymentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'payment'",
        "detail": "ecommerce.payment.apps",
        "documentation": {}
    },
    {
        "label": "ShippingForm",
        "kind": 6,
        "importPath": "ecommerce.payment.forms",
        "description": "ecommerce.payment.forms",
        "peekOfCode": "class ShippingForm(forms.ModelForm):\n  class Meta:\n    model = ShippingAddress\n    fields = ['full_name', 'email', 'first_address', 'second_address', 'city', 'state', 'zipcode']\n    exclude = ['user',]",
        "detail": "ecommerce.payment.forms",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "kind": 6,
        "importPath": "ecommerce.payment.models",
        "description": "ecommerce.payment.models",
        "peekOfCode": "class ShippingAddress(models.Model):\n  full_name = models.CharField(max_length=250)\n  email = models.EmailField(max_length=255)\n  first_address = models.CharField(max_length=300)\n  second_address = models.CharField(max_length=300)\n  city = models.CharField(max_length=255)\n  state = models.CharField(max_length=255, null=True, blank=True)\n  zipcode = models.CharField(max_length=255, null=True, blank=True)\n  user = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n  class Meta:",
        "detail": "ecommerce.payment.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecommerce.payment.urls",
        "description": "ecommerce.payment.urls",
        "peekOfCode": "urlpatterns = [\n  path('checkout', views.checkout, name='checkout'),\n  path('payment-success', views.payment_success, name='payment-success'),\n  path('payment-failed', views.payment_failed, name='payment-failed'),\n]",
        "detail": "ecommerce.payment.urls",
        "documentation": {}
    },
    {
        "label": "checkout",
        "kind": 2,
        "importPath": "ecommerce.payment.views",
        "description": "ecommerce.payment.views",
        "peekOfCode": "def checkout( request ):\n  return render( request, 'payment/checkout.html' )\ndef payment_success( request ):\n  return render( request, 'payment/payment-success.html')\ndef payment_failed( request ):\n  return render( request, 'payment/payment-failed.html')",
        "detail": "ecommerce.payment.views",
        "documentation": {}
    },
    {
        "label": "payment_success",
        "kind": 2,
        "importPath": "ecommerce.payment.views",
        "description": "ecommerce.payment.views",
        "peekOfCode": "def payment_success( request ):\n  return render( request, 'payment/payment-success.html')\ndef payment_failed( request ):\n  return render( request, 'payment/payment-failed.html')",
        "detail": "ecommerce.payment.views",
        "documentation": {}
    },
    {
        "label": "payment_failed",
        "kind": 2,
        "importPath": "ecommerce.payment.views",
        "description": "ecommerce.payment.views",
        "peekOfCode": "def payment_failed( request ):\n  return render( request, 'payment/payment-failed.html')",
        "detail": "ecommerce.payment.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ecommerce.store.migrations.0001_initial",
        "description": "ecommerce.store.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(db_index=True, max_length=250)),",
        "detail": "ecommerce.store.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "ecommerce.store.migrations.0002_product_category",
        "description": "ecommerce.store.migrations.0002_product_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='category',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='store.category'),\n        ),",
        "detail": "ecommerce.store.migrations.0002_product_category",
        "documentation": {}
    },
    {
        "label": "CategoryAdmin",
        "kind": 6,
        "importPath": "ecommerce.store.admin",
        "description": "ecommerce.store.admin",
        "peekOfCode": "class CategoryAdmin(admin.ModelAdmin):\n  prepopulated_fields = {'slug': ('name',)}\n@admin.register(Product)\nclass ProductAdmin(admin.ModelAdmin):\n  prepopulated_fields = {'slug': ('title',)}",
        "detail": "ecommerce.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "ecommerce.store.admin",
        "description": "ecommerce.store.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n  prepopulated_fields = {'slug': ('title',)}",
        "detail": "ecommerce.store.admin",
        "documentation": {}
    },
    {
        "label": "StoreConfig",
        "kind": 6,
        "importPath": "ecommerce.store.apps",
        "description": "ecommerce.store.apps",
        "peekOfCode": "class StoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'store'",
        "detail": "ecommerce.store.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "ecommerce.store.models",
        "description": "ecommerce.store.models",
        "peekOfCode": "class Category(models.Model):\n  name = models.CharField(max_length=250, db_index=True, null=False)\n  slug = models.SlugField(max_length=255, unique=True)\n  class Meta:\n    verbose_name_plural = 'categories'\n  def __str__(self):\n    return self.name\n  def get_absolute_url(self):\n    return reverse('list-category', args=[self.slug])\nclass Product(models.Model):",
        "detail": "ecommerce.store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "ecommerce.store.models",
        "description": "ecommerce.store.models",
        "peekOfCode": "class Product(models.Model):\n  title = models.CharField(max_length=250)\n  brand = models.CharField(max_length=250, default='un-branded')\n  description = models.TextField(blank=True)\n  slug = models.SlugField(max_length=255)\n  price = models.DecimalField(max_digits=4, decimal_places=2)\n  image = models.ImageField(upload_to='images/')\n  category = models.ForeignKey(Category, related_name='product', on_delete=models.CASCADE, null=True)\n  class Meta:\n    verbose_name_plural = 'products'",
        "detail": "ecommerce.store.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecommerce.store.urls",
        "description": "ecommerce.store.urls",
        "peekOfCode": "urlpatterns = [\n  path('', views.store, name='store'),\n  # Individual Product\n  path('product/<slug:product_slug>/', views.product_info, name='product-info'),\n  # Individual Category\n  path('search/<slug:category_slug>/', views.list_category, name='list-category'),\n]",
        "detail": "ecommerce.store.urls",
        "documentation": {}
    },
    {
        "label": "store",
        "kind": 2,
        "importPath": "ecommerce.store.views",
        "description": "ecommerce.store.views",
        "peekOfCode": "def store(request):\n  all_products = Product.objects.all()\n  context = {'all_products': all_products}\n  return render(request, 'store/index.html', context)\ndef categories(request):\n  all_categories = Category.objects.all()\n  return { 'all_categories': all_categories }\ndef list_category(request, category_slug=None):\n  category = get_object_or_404(Category, slug=category_slug)\n  products = Product.objects.filter(category=category)",
        "detail": "ecommerce.store.views",
        "documentation": {}
    },
    {
        "label": "categories",
        "kind": 2,
        "importPath": "ecommerce.store.views",
        "description": "ecommerce.store.views",
        "peekOfCode": "def categories(request):\n  all_categories = Category.objects.all()\n  return { 'all_categories': all_categories }\ndef list_category(request, category_slug=None):\n  category = get_object_or_404(Category, slug=category_slug)\n  products = Product.objects.filter(category=category)\n  return render(request, 'store/list-category.html', {'category': category, 'products': products})\ndef product_info(request, product_slug):\n  product = get_object_or_404(Product, slug=product_slug)\n  context = {'product': product}",
        "detail": "ecommerce.store.views",
        "documentation": {}
    },
    {
        "label": "list_category",
        "kind": 2,
        "importPath": "ecommerce.store.views",
        "description": "ecommerce.store.views",
        "peekOfCode": "def list_category(request, category_slug=None):\n  category = get_object_or_404(Category, slug=category_slug)\n  products = Product.objects.filter(category=category)\n  return render(request, 'store/list-category.html', {'category': category, 'products': products})\ndef product_info(request, product_slug):\n  product = get_object_or_404(Product, slug=product_slug)\n  context = {'product': product}\n  return render(request, 'store/product-info.html', context)",
        "detail": "ecommerce.store.views",
        "documentation": {}
    },
    {
        "label": "product_info",
        "kind": 2,
        "importPath": "ecommerce.store.views",
        "description": "ecommerce.store.views",
        "peekOfCode": "def product_info(request, product_slug):\n  product = get_object_or_404(Product, slug=product_slug)\n  context = {'product': product}\n  return render(request, 'store/product-info.html', context)",
        "detail": "ecommerce.store.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "ecommerce.manage",
        "description": "ecommerce.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "ecommerce.manage",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV_PROMPT\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    }
]